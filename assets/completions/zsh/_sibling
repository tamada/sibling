#compdef sibling

autoload -U is-at-least

_sibling() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-s+[specify the number of times to execute sibling]:COUNT: ' \
'--step=[specify the number of times to execute sibling]:COUNT: ' \
'-i+[generate the initialize script for the shell]:SHELL: ' \
'--init=[generate the initialize script for the shell]:SHELL: ' \
'-t+[specify the nexter type]:TYPE:(first last previous next random keep)' \
'--type=[specify the nexter type]:TYPE:(first last previous next random keep)' \
'--csv[print the result in the csv format]' \
'-a[print the directory name in the absolute path]' \
'--absolute[print the directory name in the absolute path]' \
'-l[list the sibling directories]' \
'--list[list the sibling directories]' \
'-p[print the progress of traversing directories]' \
'--progress[print the progress of traversing directories]' \
'-P[print parent directory, when no more sibling directories are found]' \
'--parent[print parent directory, when no more sibling directories are found]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'*::dirs -- the target directory:_files' \
&& ret=0
}

(( $+functions[_sibling_commands] )) ||
_sibling_commands() {
    local commands; commands=()
    _describe -t commands 'sibling commands' commands "$@"
}

if [ "$funcstack[1]" = "_sibling" ]; then
    _sibling "$@"
else
    compdef _sibling sibling
fi
